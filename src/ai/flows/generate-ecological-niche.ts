// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Generates information about a species' role in its ecological niche.
 *
 * - generateEcologicalNiche - A function that generates information about a species' ecological niche.
 * - GenerateEcologicalNicheInput - The input type for the generateEcologicalNiche function.
 * - GenerateEcologicalNicheOutput - The return type for the generateEcologicalNiche function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateEcologicalNicheInputSchema = z.object({
  speciesName: z.string().describe('The name of the species to generate an ecological niche for.'),
});
export type GenerateEcologicalNicheInput = z.infer<typeof GenerateEcologicalNicheInputSchema>;

const GenerateEcologicalNicheOutputSchema = z.object({
  ecologicalNiche: z.string().describe('A description of the species\'s ecological niche.'),
});
export type GenerateEcologicalNicheOutput = z.infer<typeof GenerateEcologicalNicheOutputSchema>;

export async function generateEcologicalNiche(input: GenerateEcologicalNicheInput): Promise<GenerateEcologicalNicheOutput> {
  return generateEcologicalNicheFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateEcologicalNichePrompt',
  input: {schema: GenerateEcologicalNicheInputSchema},
  output: {schema: GenerateEcologicalNicheOutputSchema},
  prompt: `You are an expert ecologist. Please provide a detailed description of the ecological niche for the following species: {{{speciesName}}}. Include information about its habitat, diet, interactions with other species, and its role in the ecosystem.`,
});

const generateEcologicalNicheFlow = ai.defineFlow(
  {
    name: 'generateEcologicalNicheFlow',
    inputSchema: GenerateEcologicalNicheInputSchema,
    outputSchema: GenerateEcologicalNicheOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
